cmake_minimum_required(VERSION 2.8)
project(Animation3D)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
  message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

option(TIMER "timer" ON)
set(TIMER OFF)
if(TIMER)
  add_definitions(-DENABLE_TIMER)
  message("Compile with ENABLE_TIMER option")
else()
  message("Compile with DISABLE_TIMER option")
endif()

option(SCREEN_SHOT "timer" ON)
set(SCREEN_SHOT OFF)
if(SCREEN_SHOT)
  add_definitions(-DENABLE_SCREEN_SHOT)
  message("Compile with ENABLE_SCREEN_SHOT option")
else()
  message("Compile with DISABLE_SCREEN_SHOT option")
endif()

find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)
include_directories( ${OPENGL_INCLUDE_DIRS}  ${GLUT_INCLUDE_DIRS} )

# find_package(Eigen REQUIRED)
# include_directories(${Eigen_INCLUDE_DIRS})
# include_directories(${EIGEN_INCLUDE_DIRS})
find_package(Boost REQUIRED)
include_directories(${Boost_INCLUDE_DIR})
include_directories(/usr/include/eigen3)

## Compile for demo 1
set (DEMO1_SOURCES src/water_demo.cpp)
add_executable(water_demo ${DEMO1_SOURCES})
target_link_libraries(water_demo ${OPENGL_LIBRARIES} ${GLUT_LIBRARY})
